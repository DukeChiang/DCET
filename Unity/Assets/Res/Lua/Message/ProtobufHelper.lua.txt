-- Generated by CSharp.lua Compiler
local System = System
local DCETRuntime = DCETRuntime
local UnityEngine = UnityEngine
System.namespace("DCET", function (namespace)
  namespace.class("ProtobufHelper", function (namespace)
    local ToStream, FromStream, static
    static = function (this)
      if DCETRuntime.Define.IsAsync then
        --int result = DCETRuntime.AssetBundles.Default.CheckRes("outermessage.unity3d", "OuterMessage.txt");
        --Log.Debug("check result:" + result);
        local textAsset = DCETRuntime.AssetBundles.getDefault():LoadAsset("outermessage.unity3d", "OuterMessage")
        if UnityEngine.Object.op_Inequality(textAsset, nil) and System.is(textAsset, UnityEngine.TextAsset) then
          local prototxt = System.as(textAsset, UnityEngine.TextAsset)
          local allmsg = prototxt:gettext()
          local protoc = require "protoc"
          DCET.Log.Debug("load proto:"..allmsg)
          protoc:load(allmsg)
        end
      else
        local pb = require "pb"
        pb.loadfile("Assets/Res/Lua/pbc/AutoGeneratedCode/OuterMessage.pb")
      end
    end
    ToStream = function (message, memoryStream)
      local bytes = nil

      bytes = encodeProtobuf(message)

      DCETRuntime.StreamHelper.WriteBytes(memoryStream, bytes)
    end
    FromStream = function (message, memoryStream)
      if message ~= nil then
        local bytes = DCETRuntime.StreamHelper.ReadBytes(memoryStream, 2 --[[Packet.MessageIndex]])

        if bytes ~= nil then
          return decodeProtobuf(bytes, message)
        end
      end

      return nil
    end
    return {
      ToStream = ToStream,
      FromStream = FromStream,
      static = static
    }
  end)
end)
